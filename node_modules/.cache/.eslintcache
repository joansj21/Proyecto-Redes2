[{"C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\index.js":"1","C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\App.js":"2","C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\reportWebVitals.js":"3","C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\login\\Login.jsx":"4","C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\register\\Register.jsx":"5","C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\mainWeb\\MainWeb.jsx":"6","C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\registerAdmin\\Register.jsx":"7","C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\inicio\\Inicio.jsx":"8"},{"size":535,"mtime":1667029584155,"results":"9","hashOfConfig":"10"},{"size":3415,"mtime":1668582847047,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1666830799721,"results":"12","hashOfConfig":"10"},{"size":4749,"mtime":1668719542113,"results":"13","hashOfConfig":"10"},{"size":3305,"mtime":1668710722728,"results":"14","hashOfConfig":"10"},{"size":2428,"mtime":1668575370379,"results":"15","hashOfConfig":"10"},{"size":3315,"mtime":1668710734429,"results":"16","hashOfConfig":"10"},{"size":871,"mtime":1668722742633,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"18ct8t",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\index.js",[],[],[],"C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\App.js",["45","46","47","48","49","50","51"],[],"\nimport React from \"react\";\nimport Login from './login/Login';\nimport Inicio from './inicio/Inicio';\nimport './App.css';\n\nimport axios from 'axios'\nimport {useState,useEffect} from 'react'\n;\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nconst NoPage = () => {\n  return <h1>404</h1>;\n};\n\n\n\nfunction App() {\n  ///////////////////////\n//ipblock\n\n//creating IP state\nconst [ip, setIP] = useState('');\nconst [ipBlock, setIpBlock] = useState([]);\nconst [blockRefresh, setBlockRefrehs] = useState({\n  \"block\":false\n\n\n})\n\n\n//creating function to load ip address from the API\nconst getData = async () => {\n  const res = await axios.get('https://geolocation-db.com/json/')\n  console.log(res.data);\n  setIP(res.data.IPv4)\n}\n\nuseEffect( () => {\n  //passing getData method to the lifecycle method\n  getData()\n\n}, [])\n\n\n\n\nuseEffect(() => {\n\n  if(blockRefresh.block===false){\nlet url = 'https://www.grupof.meseguercr.com/ipBlock'\nconst requestOptions = {\n    method: 'get',\n    headers: {'hola':'get','Content-Type': 'application/json' },\n\n};\n\nfetch(url, requestOptions)\n.then(async response => {\n  const data = await response.json();\n     \n  return data;\n\n})\n.then(data => {\n  setIpBlock(data.items);\n  \n})\n\nsetBlockRefrehs({\n  \"block\":true\n})\n\n\n  \n}\n\n\n})\n\n\nconst onBlock = (e) => {\n  e.preventDefault();\n\n\n\n  let url = 'https://www.grupof.meseguercr.com/ipBlock2'\n  const requestOptions = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json' },\n      body: JSON.stringify({\n          \"ip\":ip,\n          \"descrip\":\"Bloquedo en la pagina del grupo F \",\n\n      })\n  };\n\n  fetch(url, requestOptions)\n  .then(async response => {\n    if (response.ok) {\n      \n      return response.json();\n      \n  }else{\n      \n\n  }\n  })\n  setIpBlock({\n    ...blockRefresh,\n    \"block\":false\n})\nsetBlockRefrehs({\n  ...blockRefresh,\n  \"block\":false\n})\n//window.location.reload()\n\n} \n\nconst isBlock = () => {\n\nfor (let index=0; index<ipBlock.length; index++){\n  console.log(ipBlock[index].ip)\n  if(ipBlock[index].ip===ip){\n    return true\n\n  }\n}\n\nreturn false\n\n\n}\n//////////////////////\nconst [index, setIndex] = useState({\n  \"index\": true,\n \n});\n  \n  return (\n<div className=\"App\">\n  <Router>\n\n\n  {isBlock() &&\n      <div>\n      \n      <p>Si estas bloqueado por la ip</p>\n      <p>Por el grupos F {ip}</p>\n\n            <div>\n              <img src=\"assets/impostor.png\" alt=\"description of image\"></img>\n            </div>\n      </div>\n      \n      }\n\n    {!isBlock() &&\n      <div>\n           <Switch>\n      <Route path=\"*/blockme\" >\n\n        \n      <div>\n            <h1>Bloqueado</h1>  \n            <img src=\"assets/block.png\" alt=\"description of image\"></img>\n            \n      </div>\n       \n        \n        \n       \n      </Route>\n      \n      \n      <Route path=\"/\">\n        \n        {index.index &&\n      \n          <div>\n          <Inicio index={index} setIndex={setIndex}></Inicio>\n\n          <div className=\"session\">\n                < button className=\"session-btn\" onClick={e => onBlock(e)} >Bloquearme</button>\n         </div>\n          </div>\n\n          \n        }\n\n        {!index.index &&\n        \n        <Login  index={index} setIndex={setIndex}></Login>\n        }\n\n        \n  \n      </Route>\n      </Switch>\n\n      \n\n      </div>\n\n      \n\n      }\n    \n\n        \n      \n      \n    \n  </Router>\n</div>\n  );\n}\n\n\n\n\nexport default App;\n","C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\reportWebVitals.js",[],[],"C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\login\\Login.jsx",[],[],"C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\register\\Register.jsx",["52"],[],"C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\mainWeb\\MainWeb.jsx",["53","54","55"],[],"import { useState, useRef } from \"react\";\r\nimport Register from '../registerAdmin/Register';\r\nimport './main.css';\r\nfunction MainWeb(props) {\r\n\r\n    const [register, setRegister] = useState({\r\n        \"register\": false,\r\n        \"message\": \"\",\r\n       \r\n    });\r\n\r\n    const outWeb = (e) => {\r\n        e.preventDefault();\r\n\r\n        props.setUser({\r\n            \"user\":\"\",\r\n            \"password\":\"\",\r\n            \"name\":\"\",\r\n            \"type\":\"\"\r\n            })\r\n       \r\n       \r\n        }\r\n\r\n\r\n        const registerAdmin = (e) => {\r\n            e.preventDefault();\r\n    \r\n            setRegister({\r\n                \"register\": true,\r\n                \"message\": \"\",\r\n                })\r\n           \r\n           \r\n            }\r\n\r\n    return(\r\n\r\n        <div>\r\n            \r\n            \r\n        \r\n        {props.user.type==='0'&&<div className=\"field-group-login\">\r\n            <h3>Pagina Principal</h3>\r\n            \r\n            <div className=\"field-group-main\">\r\n            <p>Bienvenido a la pagina {props.user.name}</p>\r\n            </div>\r\n            <div>\r\n            <img src=\"assets/user.png\" alt=\"description of image\"></img>\r\n            </div>\r\n\r\n            \r\n        </div>}\r\n\r\n\r\n        {props.user.type==='1'&& <div className=\"field-group-login\">\r\n            <h3>Pagina Principal de administrador</h3>\r\n            <div className=\"field-group-main\">\r\n            <p>Bienvenido a la pagina {props.user.name}</p>\r\n            </div>\r\n\r\n            \r\n            \r\n            {!register.register &&<div className=\"field-group-login\">\r\n            < button className=\"main-btn\" onClick={e => registerAdmin(e)} >Registrar Administrador</button>\r\n            </div>\r\n            }\r\n            {register.register &&\r\n            \r\n            <Register register={register} setRegister={setRegister}></Register>\r\n            \r\n            \r\n            }\r\n\r\n            <div className=\"error-lbl\">\r\n            <p> {register.message}</p>\r\n            </div>\r\n\r\n            \r\n            <div>\r\n            <img src=\"assets/Among.png\" alt=\"description of image\"></img>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        \r\n        \r\n        }\r\n\r\n        <div className=\"session\">\r\n                < button className=\"session-btn\" onClick={e => outWeb(e)} >Salir</button>\r\n        </div>\r\n\r\n           \r\n\r\n        </div>\r\n        \r\n        \r\n\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default MainWeb;\r\n","C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\registerAdmin\\Register.jsx",["56"],[],"C:\\Users\\DELL G5\\Desktop\\Proyecto Redes 2\\Proyecto\\src\\inicio\\Inicio.jsx",["57","58","59"],[],{"ruleId":"60","severity":1,"message":"61","line":15,"column":3,"nodeType":"62","messageId":"63","endLine":15,"endColumn":7},{"ruleId":"60","severity":1,"message":"64","line":16,"column":3,"nodeType":"62","messageId":"63","endLine":16,"endColumn":16},{"ruleId":"60","severity":1,"message":"65","line":17,"column":3,"nodeType":"62","messageId":"63","endLine":17,"endColumn":12},{"ruleId":"60","severity":1,"message":"66","line":20,"column":7,"nodeType":"62","messageId":"63","endLine":20,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":56,"column":1,"nodeType":"62","endLine":56,"endColumn":10,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":161,"column":15,"nodeType":"72","endLine":161,"endColumn":73},{"ruleId":"70","severity":1,"message":"71","line":175,"column":13,"nodeType":"72","endLine":175,"endColumn":68},{"ruleId":"60","severity":1,"message":"73","line":13,"column":12,"nodeType":"62","messageId":"63","endLine":13,"endColumn":18},{"ruleId":"60","severity":1,"message":"74","line":1,"column":20,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"71","line":50,"column":13,"nodeType":"72","endLine":50,"endColumn":67},{"ruleId":"70","severity":1,"message":"71","line":82,"column":13,"nodeType":"72","endLine":82,"endColumn":68},{"ruleId":"60","severity":1,"message":"73","line":13,"column":12,"nodeType":"62","messageId":"63","endLine":13,"endColumn":18},{"ruleId":"60","severity":1,"message":"75","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":18},{"ruleId":"60","severity":1,"message":"74","line":1,"column":20,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"71","line":26,"column":25,"nodeType":"72","endLine":26,"endColumn":81},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'NoPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setBlockRefrehs'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [blockRefresh.block] as a second argument to the useEffect Hook.",["76"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'client' is assigned a value but never used.","'useRef' is defined but never used.","'useState' is defined but never used.",{"desc":"77","fix":"78"},"Add dependencies array: [blockRefresh.block]",{"range":"79","text":"80"},[1315,1315],", [blockRefresh.block]"]