{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL G5\\\\Desktop\\\\Proyecto Redes 2\\\\Proyecto\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Login from './login/Login';\nimport './App.css';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, useRouteMatch, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"404\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n};\n///////////////////////\n//ipblock\n\n//creating IP state\n_c = NoPage;\nconst [ip, setIP] = useState('');\nconst [ipBlock, setIpBlock] = useState([]);\nconst [blockRefresh, setBlockRefrehs] = useState({\n  \"block\": false\n});\n\n//creating function to load ip address from the API\nconst getData = async () => {\n  const res = await axios.get('https://geolocation-db.com/json/');\n  console.log(res.data);\n  setIP(res.data.IPv4);\n};\nuseEffect(() => {\n  //passing getData method to the lifecycle method\n  getData();\n}, []);\nuseEffect(() => {\n  if (blockRefresh.block === false) {\n    let url = 'https://g5ab0d028fce44a-proyecto.adb.us-phoenix-1.oraclecloudapps.com/ords/proyecto/proyecto/ipBlock/';\n    const requestOptions = {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(url, requestOptions).then(async response => {\n      const data = await response.json();\n      return data;\n    }).then(data => {\n      setIpBlock(data.items);\n    });\n    setBlockRefrehs({\n      \"block\": true\n    });\n  }\n});\nconst onBlock = e => {\n  e.preventDefault();\n  let url = 'https://g5ab0d028fce44a-proyecto.adb.us-phoenix-1.oraclecloudapps.com/ords/proyecto/proyecto/ipBlock/';\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"ip\": ip,\n      \"descrip\": \"Bloqueado por que si \"\n    })\n  };\n  fetch(url, requestOptions).then(async response => {\n    if (response.ok) {\n      return response.json();\n    } else {}\n  });\n  setIpBlock({\n    ...blockRefresh,\n    \"block\": false\n  });\n};\nconst isBlock = () => {\n  for (let index = 0; index < ipBlock.length; index++) {\n    console.log(ipBlock[index].ip);\n    if (ipBlock[index].ip === ip) {\n      return true;\n    }\n  }\n  return false;\n};\n//////////////////////\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [isBlock() && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [ipBlock.map(ipBlocker => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"IP: \", ipBlocker.ip, \"     Descripcion: \", ipBlocker.descrip]\n        }, ipBlocker.ip, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Si estas bloqueado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), !isBlock() && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"*/blockme\",\n            element: /*#__PURE__*/_jsxDEV(NoPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 40\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Bloqueado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 1\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NoPage\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","Login","axios","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","useRouteMatch","useParams","NoPage","ip","setIP","ipBlock","setIpBlock","blockRefresh","setBlockRefrehs","getData","res","get","console","log","data","IPv4","block","url","requestOptions","method","headers","fetch","then","response","json","items","onBlock","e","preventDefault","body","JSON","stringify","ok","isBlock","index","length","App","map","ipBlocker","descrip"],"sources":["C:/Users/DELL G5/Desktop/Proyecto Redes 2/Proyecto/src/App.js"],"sourcesContent":["\nimport React from \"react\";\nimport Login from './login/Login';\nimport './App.css';\n\nimport axios from 'axios'\nimport {useState,useEffect} from 'react'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nconst NoPage = () => {\n  return <h1>404</h1>;\n};\n///////////////////////\n//ipblock\n\n//creating IP state\nconst [ip, setIP] = useState('');\nconst [ipBlock, setIpBlock] = useState([]);\nconst [blockRefresh, setBlockRefrehs] = useState({\n  \"block\":false\n\n\n})\n\n\n//creating function to load ip address from the API\nconst getData = async () => {\n  const res = await axios.get('https://geolocation-db.com/json/')\n  console.log(res.data);\n  setIP(res.data.IPv4)\n}\n\nuseEffect( () => {\n  //passing getData method to the lifecycle method\n  getData()\n\n}, [])\n\n\n\n\nuseEffect(() => {\n\n  if(blockRefresh.block===false){\nlet url = 'https://g5ab0d028fce44a-proyecto.adb.us-phoenix-1.oraclecloudapps.com/ords/proyecto/proyecto/ipBlock/'\nconst requestOptions = {\n    method: 'get',\n    headers: {'Content-Type': 'application/json' },\n\n};\n\nfetch(url, requestOptions)\n.then(async response => {\n  const data = await response.json();\n     \n  return data;\n\n})\n.then(data => {\n  setIpBlock(data.items);\n  \n})\n\nsetBlockRefrehs({\n  \"block\":true\n})\n\n\n  \n}\n\n\n})\n\n\nconst onBlock = (e) => {\n  e.preventDefault();\n\n\n\n  let url = 'https://g5ab0d028fce44a-proyecto.adb.us-phoenix-1.oraclecloudapps.com/ords/proyecto/proyecto/ipBlock/'\n  const requestOptions = {\n      method: 'POST',\n      headers: {'Content-Type': 'application/json' },\n      body: JSON.stringify({\n          \"ip\":ip,\n          \"descrip\":\"Bloqueado por que si \",\n\n      })\n  };\n\n  fetch(url, requestOptions)\n  .then(async response => {\n    if (response.ok) {\n      \n      return response.json();\n      \n  }else{\n      \n\n  }\n  })\n  setIpBlock({\n    ...blockRefresh,\n    \"block\":false\n})\n\n\n\n} \n\nconst isBlock = () => {\n\nfor (let index=0; index<ipBlock.length; index++){\n  console.log(ipBlock[index].ip)\n  if(ipBlock[index].ip===ip){\n    return true\n\n  }\n}\n\nreturn false\n\n\n}\n//////////////////////\n\n\nfunction App() {\n  return (\n<div className=\"App\">\n  <Router>\n\n\n  {isBlock() &&\n      <div>\n      {ipBlock.map(ipBlocker => <p key={ipBlocker.ip}>IP: {ipBlocker.ip}     Descripcion: {ipBlocker.descrip}</p>)}\n      <p>Si estas bloqueado</p>\n      </div>\n      }\n\n    {!isBlock() &&\n      <div>\n           <Switch>\n      <Route path=\"*/blockme\" element={<NoPage />}>\n        <h1>Bloqueado</h1>   \n       \n      </Route>\n      \n      \n      <Route path=\"/\">\n        \n        <Login></Login>\n        \n  \n      </Route>\n      </Switch>\n      </div>\n      }\n    \n\n        \n      \n      \n    \n  </Router>\n</div>\n  );\n}\n\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}